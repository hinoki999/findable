name: Deploy to Production

on:
  push:
    branches:
      - main
      - albert/full-integration
  workflow_dispatch: # Allows manual trigger from GitHub Actions UI

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      
      - name: Install dependencies
        run: |
          cd backend
          pip install -r requirements.txt
      
      - name: Run linter
        run: |
          cd backend
          pip install flake8
          flake8 main.py --max-line-length=120 --ignore=E501,W503 || true
      
      - name: Check for syntax errors
        run: |
          cd backend
          python -m py_compile main.py
  
  deploy-production:
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || github.event_name == 'workflow_dispatch'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Deploy to Railway (Production)
        run: |
          echo "✓ Railway will auto-deploy on push to production branch"
          echo "Branch: ${{ github.ref }}"
          echo "Check Railway dashboard: https://railway.app"
      
      - name: Wait for deployment
        run: |
          echo "Waiting 90 seconds for Railway to deploy..."
          sleep 90
      
      - name: Health check production
        run: |
          PROD_URL="https://findable-production.up.railway.app"
          
          echo "Testing production health endpoint..."
          
          for i in {1..15}; do
            STATUS=$(curl -s -o /dev/null -w "%{http_code}" "$PROD_URL/health" || echo "000")
            if [ "$STATUS" = "200" ]; then
              echo "✓ Production deployment successful!"
              curl -s "$PROD_URL/health" | python -m json.tool
              exit 0
            fi
            echo "Waiting for production deployment... ($i/15) - Status: $STATUS"
            sleep 10
          done
          
          echo "⚠️  Production deployment may still be in progress"
          echo "Check Railway dashboard for status"
          exit 0
      
      - name: Run production smoke tests
        run: |
          PROD_URL="https://findable-production.up.railway.app"
          
          echo "Running smoke tests on production..."
          
          # Test critical endpoints
          echo "Testing /health..."
          curl -f "$PROD_URL/health" || echo "Health check warning"
          
          echo "Testing /ready..."
          curl -f "$PROD_URL/ready" || echo "Ready check warning"
          
          echo "Testing / ..."
          curl -f "$PROD_URL/" || echo "Root endpoint warning"
          
          echo "✓ Production smoke tests completed"
      
      - name: Deployment Summary
        if: success()
        run: |
          echo "================================"
          echo "✓ Production Deployment Success"
          echo "================================"
          echo "Branch: ${{ github.ref }}"
          echo "Commit: ${{ github.sha }}"
          echo "URL: https://findable-production.up.railway.app"
          echo ""
          echo "Next steps:"
          echo "1. Monitor Railway dashboard for stability"
          echo "2. Check application logs for errors"
          echo "3. Verify all features are working"
      
      - name: Deployment Failed
        if: failure()
        run: |
          echo "================================"
          echo "✗ Production Deployment Failed"
          echo "================================"
          echo "Check Railway dashboard for details"
          echo "Consider rolling back if critical"


